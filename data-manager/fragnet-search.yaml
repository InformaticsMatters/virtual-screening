---
kind: DataManagerJobDefinition
kind-version: '2021.1'

name: Fragment Network search tools
collection: im-fragment-network

test-groups:
- name: fragnet-search
  compose:
    file: docker-compose-fns.yaml
    delay-seconds: 10
  environment:
  - NEO4J_USERNAME: neo4j
  - NEO4J_PASSWORD: test123
  - NEO4J_SERVER: bolt://graph:7687

jobs:
  fragment-network-expand:
    name: Fragment network expansion
    description: >-
      Expand a set of molecules using the fragment network
    version: '1.0.0'
    category: virtual screening
    keywords:
    - fragment-network
    - candidate-selection
    image:
      name: informaticsmatters/vs-fragnet-search
      tag: 'latest'
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      environment:
      - name: NEO4J_USERNAME
        value-from:
          secret:
            name: im-fragnet-graph
            key: username
      - name: NEO4J_PASSWORD
        value-from:
          secret:
            name: im-fragnet-graph
            key: password
      - name: NEO4J_SERVER
        value-from:
          secret:
            name: im-fragnet-graph
            key: server
    command: >-
      /code/fn_expand.py
      --smiles '{{ smiles }}'
      --outfile '{{ outputFile }}'
      --hops {{ hops }}
      {% if hacMin is defined %}--hac-min {{ hacMin }}{% endif %}
      {% if hacMax is defined %}--hac-max {{ hacMax }}{% endif %}
      {% if racMin is defined %}--rac-min {{ racMin }}{% endif %}
      {% if racMax is defined %}--rac-max {{ racMax }}{% endif %}
    variables:
      order:
        options:
        - smiles
        - outputFile
        - hops
        - hacMin
        - hacMax
        - racMin
        - racMax
      outputs:
        type: object
        properties:
          results:
            title: Expanded molecules as SMILES
            mime-types:
            - squonk/x-smiles
            creates: '{{ outputFile }}'
            type: file
      options:
        type: object
        required:
        - smiles
        - outputFile
        - hops
        properties:
          smiles:
            title: Query SMILES
            type: string
          outputFile:
            title: Output file (.smi)
            type: string
            default: expansions.smi
            pattern: "^[A-Za-z0-9_/\\.\\-]+\\.smi$"
          hops:
            title: Number of fragment network hops
            type: integer
            default: 1
            minimum: 1
            maximum: 3
          hacMin:
            title: Permitted reduction in heavy atom count
            type: integer
            minimum: 1
          hacMax:
            title: Permitted increase in heavy atom count
            type: integer
            minimum: 1
          racMin:
            title: Permitted reduction in ring atom count
            type: integer
            minimum: 1
          racMax:
            title: Permitted increase in ring atom count
            type: integer
            minimum: 1
    tests:
      simple-expand:
        run-groups:
        - name: fragnet-search
          ordinal: 1
        environment:
        - NEO4J_USERNAME
        - NEO4J_PASSWORD
        - NEO4J_SERVER
        options:
          smiles: c1ccco1
          hops: 1
          outputFile: foo.smi
        checks:
          exitCode: 0
          outputs:
          - name: foo.smi
            checks:
            - exists: true
            - lineCount: 1180

  fragment-network-find-synthons:
    name: Fragment network find synthons
    description: >-
      Find the "synthons" of a molecule
    version: '1.0.0'
    category: virtual screening
    keywords:
    - fragment-network
    - candidate-selection
    - synthons
    image:
      name: informaticsmatters/vs-fragnet-search
      tag: 'latest'
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      environment:
      - name: NEO4J_USERNAME
        value-from:
          secret:
            name: im-fragnet-graph
            key: username
      - name: NEO4J_PASSWORD
        value-from:
          secret:
            name: im-fragnet-graph
            key: password
      - name: NEO4J_SERVER
        value-from:
          secret:
            name: im-fragnet-graph
            key: server
    command: >-
      /code/fn_find_synthons.py
      --smiles '{{ smiles }}'
      --outfile '{{ outputFile }}'
    variables:
      order:
        options:
        - smiles
        - outputFile
      outputs:
        type: object
        properties:
          results:
            title: Synthons as SMILES
            mime-types:
            - squonk/x-smiles
            creates: '{{ outputFile }}'
            type: file
      options:
        type: object
        required:
        - smiles
        - outputFile
        properties:
          smiles:
            title: Query SMILES
            type: string
          outputFile:
            title: Output file (.smi)
            type: string
            default: synthons.smi
            pattern: "^[A-Za-z0-9_/\\.\\-]+\\.smi$"
    tests:
      simple-find-synthons:
        run-groups:
        - name: fragnet-search
          ordinal: 2
        environment:
        - NEO4J_USERNAME
        - NEO4J_PASSWORD
        - NEO4J_SERVER
        options:
          smiles: c1coc(CNc2nc3ccccc3[nH]2)c1
          hops: 1
          outputFile: foo.smi
        checks:
          exitCode: 0
          outputs:
          - name: foo.smi
            checks:
            - exists: true
            - lineCount: 10

  fragment-network-synthon-expansion:
    name: Fragment network expansion
    description: >-
      Expand a set of molecules using the fragment network
    version: '1.0.0'
    category: virtual screening
    keywords:
    - fragment-network
    - candidate-selection
    image:
      name: informaticsmatters/vs-fragnet-search
      tag: 'latest'
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      environment:
      - name: NEO4J_USERNAME
        value-from:
          secret:
            name: im-fragnet-graph
            key: username
      - name: NEO4J_PASSWORD
        value-from:
          secret:
            name: im-fragnet-graph
            key: password
      - name: NEO4J_SERVER
        value-from:
          secret:
            name: im-fragnet-graph
            key: server
    command: >-
      /code/fn_synthon_expansion.py
      --smiles '{{ smiles }}'
      --synthon '{{ synthon }}'
      --outfile '{{ outputFile }}'
      --hops {{ hops }}
      {% if hacMin is defined %}--hac-min {{ hacMin }}{% endif %}
      {% if hacMax is defined %}--hac-max {{ hacMax }}{% endif %}
      {% if racMin is defined %}--rac-min {{ racMin }}{% endif %}
      {% if racMax is defined %}--rac-max {{ racMax }}{% endif %}
    variables:
      order:
        options:
        - smiles
        - synthon
        - outputFile
        - hops
        - hacMin
        - hacMax
        - racMin
        - racMax
      outputs:
        type: object
        properties:
          results:
            title: Expanded molecules as SMILES
            mime-types:
            - squonk/x-smiles
            creates: '{{ outputFile }}'
            type: file
      options:
        type: object
        required:
        - smiles
        - outputFile
        - hops
        properties:
          smiles:
            title: Query SMILES
            type: string
          synthon:
            title: Synthon SMILES
            type: string
            multiple: true
          outputFile:
            title: Output file (.smi)
            type: string
            default: synthon-expansions.smi
            pattern: "^[A-Za-z0-9_/\\.\\-]+\\.smi$"
          hops:
            title: Number of fragment network hops
            type: integer
            default: 1
            minimum: 1
            maximum: 4
          hacMin:
            title: Min heavy atom count
            type: integer
            minimum: 1
          hacMax:
            title: Max heavy atom count
            type: integer
            minimum: 1
          racMin:
            title: Min ring atom count
            type: integer
            minimum: 1
          racMax:
            title: Max ring atom count
            type: integer
            minimum: 1
    tests:
      simple-synthon-expansion:
        run-groups:
        - name: fragnet-search
          ordinal: 3
        environment:
        - NEO4J_USERNAME
        - NEO4J_PASSWORD
        - NEO4J_SERVER
        options:
          smiles: c1ccco1
          synthon: "[Xe]C1C=CCCC1"
          hops: 2
          outputFile: foo.smi
        checks:
          exitCode: 0
          outputs:
          - name: foo.smi
            checks:
            - exists: true
            - lineCount: 54
