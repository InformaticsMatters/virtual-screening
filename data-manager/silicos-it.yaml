---
# Tools from Silicos-it
# See http://silicos-it.be.s3-website-eu-west-1.amazonaws.com/
kind: DataManagerJobDefinition
kind-version: '2021.1'
name: Virtual screening with Silicos-it tools
collection: silicos-it
repository-url: https://github.com/InformaticsMatters/virtual-screening/silicos-it.yaml
repository-tag: '1.0.0'

jobs:
  shape-it:
    name: 3D shape alignment with shape-it
    description: >-
      Perform a shape alignment of a set of 3D molecules to a reference 3D molecule using Silicos-it's shape-it tool.
    version: '1.0.0'
    category: virtual screening
    keywords:
    - alignment
    - similarity
    - shape
    - silicos-it
    - filter
    doc-url: 'https://discourse.squonk.it/t/job-shape-it/93'
    image:
      name: 3dechem/silicos-it
      tag: 'latest'
      project-directory: /data
      working-directory: /data
    command: >-
      shape-it --reference '{{ refmol }}'
      --dbase '{{ molecules }}'
      --out '{{ outfilebase }}.sdf'
      --scores '{{ outfilebase }}.tab'
      {% if cutoff is defined%}--cutoff {{ cutoff }}{% endif %}
      {% if rankBy is defined%}--rankBy '{{ rankBy }}'{% endif %}
      {% if best is defined%}--best {{ best }}{% endif %}
      {% if noref %}--noRef{% endif %}
      {% if scoreOnly %}--scoreOnly{% endif %}
    variables:
      order:
        inputs:
        - refmol
        - molecules
        options:
        - outfilebase
        - cutoff
        - rankBy
        - best
        - noref
        - scoreOnly
        - addIterations
      inputs:
        type: object
        required:
        - molecules
        - refmol
        properties:
          refmol:
            title: Molecule to align to
            mime-types:
            - chemical/x-mdl-molfile
            - chemical/x-mdl-sdfile
            type: file
          molecules:
            title: Molecules to align
            mime-types:
            - chemical/x-mdl-sdfile
            type: file
      outputs:
        type: object
        properties:
          alignments:
            title: Aligned molecules
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outfilebase }}.sdf'
            type: file
          scores:
            title: Alignment scores
            mime-types:
            - text/tab-separated-values
            creates: '{{ outfilebase }}.tab'
            type: file
      options:
        type: object
        required:
        - outfilebase
        - cuttoff
        - rankBy
        - noref
        - scoreOnly
        properties:
          outfilebase:
            title: Output file base name (no extension)
            type: string
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          cutoff:
            title: Score cutoff
            type: number
            minimum: 0
            maximum: 1
          rankBy:
            title: Rank scores by
            type: string
            default: TANIMOTO
            enum:
            - TANIMOTO
            - TVERSKY_DB
            - TVERSKY_REF
          best:
            title: Keep only this many best scores
            type: integer
            minimum: 1
          noref:
            title: Do not include reference mol in output
            type: boolean
            default: false
          scoreOnly:
            title: Inputs don't need aligning
            type: boolean
            default: false
          addIterations:
            title: Additional siulated annealing steps
            type: integer
            minimum: 1

  align-it-search:
    name: Pharmacophore alignment with align-it
    description: >-
      Perform an alignment of pre-generated pharmacophores to a reference 3D molecule using Silicos-it's align-it tool.
    version: '1.0.0'
    category: virtual screening
    keywords:
    - alignment
    - similarity
    - pharmacophore
    - silicos-it
    - filter
    doc-url: 'https://discourse.squonk.it/t/job-align-it/94'
    image:
      name: 3dechem/silicos-it
      tag: 'latest'
      project-directory: /data
      working-directory: /data
    command: >-
      align-it --reference '{{ refmol }}'
      --dbase '{{ inputs }}'
      --out '{{ outfilebase }}.sdf'
      --scores '{{ outfilebase }}.tab'
      {% if cutoff is defined %}--cutOff {{ cutoff }}{% endif %}
      {% if rankBy is defined %}--rankBy '{{ rankBy }}'{% endif %}
      {% if best is defined %}--best {{ best }}{% endif %}
      {% if funcGroups %}--funcGroup {{ funcGroups }}{% endif %}
      {% if epsilon %}--epsilon {{ epsilon }}{% endif %}
      {% if merge %}--merge{% endif %}
      {% if noNormal %}--noNormal{% endif %}
      {% if noHybrid %}--noHybrid{% endif %}
      {% if scoreOnly %}--scoreOnly{% endif %}
      {% if withExclusion %}--withExclusion{% endif %}
    variables:
      order:
        inputs:
        - refmol
        - pharmacophores
        options:
        - outfilebase
        - cutoff
        - rankBy
        - best
        - funcGroups
        - epsilon
        - merge
        - noNormal
        - noHybrid
        - scoreOnly
        - withExclusion
      inputs:
        type: object
        required:
        - pharmacophores
        - refmol
        properties:
          refmol:
            title: Molecule pr pharmacophore to align to
            mime-types:
            - chemical/x-mdl-sdfile
            - chemical/x-mdl-molfile
            - squonk/align-it-phar
            type: file
          inputs:
            title: File with molecules to search
            mime-types:
            - chemical/x-mdl-sdfile
            type: file
      outputs:
        type: object
        properties:
          alignments:
            title: Aligned molecules
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outfilebase }}.sdf'
            type: file
          scores:
            title: Alignment scores
            mime-types:
            - text/tab-separated-values
            creates: '{{ outfilebase }}.tab'
            type: file
      options:
        type: object
        required:
        - outfilebase
        - pharfile
        - merge
        - noNormal
        - noHybrid
        - scoreOnly
        - withExclusion
        properties:
          outfilebase:
            title: Output file base name (no extension)
            type: string
            default: alignit_results.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          cutoff:
            title: Score cutoff
            type: number
            minimum: 0
            maximum: 1
          rankBy:
            title: Rank scores by
            type: string
            default: TANIMOTO
            enum:
            - TANIMOTO
            - TVERSKY_DB
            - TVERSKY_REF
          best:
            title: Keep only this many best scores
            type: integer
            minimum: 1
          funcGroups:
            title: Phrmacophore types
            type: string
            default: AROM,HDON,HACC,LIPO,CHARGE
            pattern: "^[A-Z,]*$"
          epsilon:
            title: Tolerance (epsilon)
            type: number
            default: 0.5
            minimum: 0
            maximum: 1
          merge:
            title: Merge points
            type: boolean
            default: false
          noNormal:
            title: Do not use normal information
            type: boolean
            default: false
          noHybrid:
            title: Do not calculate hybrid points
            type: boolean
            default: false
          scoreOnly:
            title: Inputs don't need aligning
            type: boolean
            default: false
          withExclusion:
            title: Use exlusion spheres during optimisation
            type: boolean
            default: false
