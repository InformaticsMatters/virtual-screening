---
# A Data-Manager Job definition, defining 1 or more Data Manager Jobs.
# For v1 the 'kind-version' must be '2021.1'
kind: DataManagerJobDefinition
kind-version: '2021.1'

# An arbitrary name (ignored by the DataManager)
name: RDKit virtual screening tools

# The 'collection' for the jobs named in this definition.
#
# A collection ensures that all of the Jobs have unique names so that they
# can be easily identified. A collection can be used by more than one
# JobDefinition file but all the Job identities in a given collection must
# be unique. i.e. our "shard-molecules" Job ID is unique because
# it's in the collection "im-rdkit-virtual-screening" and there is no
# other "shard-molecules" in the same collection. It is different
# to any "shard-molecules" Job identity in any other collection.
# The collection must only container lower-case letters, numbers and a hyphen
# and must begin with a letter.
collection: im-rdkit-virtual-screening

# The repository where this definition (and the code for the Job) can be found.
repository-url: https://github.com/InformaticsMatters/virtual-screening
# The repository tag.
# All definitions are expected to reside in a repository that has been tagged.
repository-tag: '1.0.3'

# Job definitions.
# A list of jobs indexed using a unique identity (i.e. "shared-molecules").
# Job identities must only container lower-case letters, numbers or a hyphen
# and must begin with a letter.
jobs:
  shard:
    # An arbitrary name.
    # The job is actually referred to in the API using the job (above),
    # e.g. 'shard-molecules'. The name is simply here as a human-friendly
    # reference.
    name: Shard candidate molecules
    # The job version.
    # Any string, but typically something compatible with SemVer 2.0.0
    version: '1.0.0'
    # An arbitrary category and keywords.3
    # Provided to facilitate Job filtering in the client.
    category: virtual screening
    keywords:
    - rdkit
    - ligand preparation
    # The container image that contains the Job implementation
    # (in v1, these are hosted on Docker Hub)
    # ... along with the image tag
    # and the project directory (mount-point) to use for the Project data.
    image:
      name: informaticsmatters/virt-screening-rdkit
      tag: '1.0.2'
      project-directory: /data
    # The command that will be used as the Kubernetes Pod 'command'
    # (after variable expansion). This is a jinja2 template with its variables
    # described in the `variables` block below (A JSONSchema block).
    command: >-
      shard.py -i /data/{{ inputFile }} -s {{ supplierName }}
      -v {{ supplierVersion }} -o /data/{{ outputDir }} -n {{ codeFieldIndex }}
      --interval 10000
    # Command variables - using JSONSchema to allow for simplified client
    # presentation to the user. 'inputs' and 'outputs' use custom types
    # and typically consist of the definition of input files and output
    # directories and files. 'options' are generic JSONSchema types,
    # like 'strings', 'integers' etc.
    # Every 'variable' expected by the command must be represented by a
    # corresponding property in 'inputs', 'outputs' or 'options'.
    variables:
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Molecules to shard
            mime-types:
            - chemical/x-csv
            multiple: true
            type: file
      outputs:
        type: object
        properties:
          hacSlices:
            mime-types:
            - chemical/x-csv
            creates: '{{ outputDir }}/{{ supplierName }}_{{ supplierVersion }}/*.smi'
            type: directory
          shards:
            mime-types:
            - appliction/json
            creates: '{{ outputDir }}/sha256/*/*/*.json'
            type: directory
      options:
        type: object
        required:
        - codeFieldIndex
        - outputDir
        - supplierName
        - supplierVersion
        properties:
          codeFieldIndex:
            title: Index of vendor code field
            default: 1
            minimum: 1
            type: integer
          outputDir:
            title: Output directory
            type: string
            default: molecules
          supplierName:
            title: Source of the molecules
            type: string
          supplierVersion:
            title: Version of the molecule source
            type: string

  filter:
    name: Filter candidate molecules
    version: '1.0.0'
    category: virtual screening
    keywords:
    - rdkit
    - ligand preparation
    - filter
    image:
      name: informaticsmatters/virt-screening-rdkit
      tag: '1.0.2'
      project-directory: /data
    command: >-
      filter.py -i /data/{{ inputDir }} -o /data/{{ outputFile }}
      --min-hac {{ minHac }}
      --max-hac {{ maxHac }}
      {% if minRotb is defined %}--min-rotb {{ minRotb }}{% endif %}
      {% if maxRotb is defined %}--max-rotb {{ maxRotb }}{% endif %}
      {% if minRings is defined %}--min-rings {{ minRings }}{% endif %}
      {% if maxRings is defined %}--max-rings {{ maxRings }}{% endif %}
      {% if minAroRings is defined %}--min-aro-rings {{ minAroRings }}{% endif %}
      {% if maxAroRings is defined %}--max-aro-rings {{ maxAroRings }}{% endif %}
      {% if minChiralCenters is defined %}--min-chiral-centres {{ minChiralCenters }}{% endif %}
      {% if maxChiralCenters is defined %}--max-chiral-centres {{ maxChiralCenters }}{% endif %}
      {% if minUndefinedChiralCenters is defined %}--min-undefined-chiral-centres {{ minUndefinedChiralCenters }}{% endif %}
      {% if maxUndefinedChiralCenters is defined %}--max-undefined-chiral-centres {{ maxUndefinedChiralCenters }}{% endif %}
      {% if minSp3 is defined %}--min-sp3 {{ minSp3 }}{% endif %}
      {% if maxSp3 is defined %}--max-sp3 {{ maxSp3 }}{% endif %}
    variables:
      inputs:
        type: object
        required:
        - inputDir
        properties:
          inputDir:
            title: Directory with molecules to filter
            mime-types:
            - chemical/x-csv
            type: dir
      outputs:
        type: object
        properties:
          outputFile:
            mime-types:
            - chemical/x-csv
            creates: '{{ outputFile }}'
            type: file
      options:
        type: object
        required:
        - minHac
        - maxHac
        - outputFile
        properties:
          outputFile:
            title: Output file name
            type: string
            default: filtered.smi
          minHac:
            title: Minimum Heavy Atom Count
            type: integer
            minimum: 0
          maxHac:
            title: Maximum Heavy Atom Count
            type: integer
            minimum: 0
          minRotb:
            title: Minimum number of rotatable bonds
            type: integer
            minimum: 0
          maxRotb:
            title: Maximum number of rotatable bonds
            type: integer
            minimum: 0
          minRings:
            title: Minimum number of rings
            type: integer
            minimum: 0
          maxRings:
            title: Maximum number of rings
            type: integer
            minimum: 0
          minAroRings:
            title: Minimum number of aromatic rings
            type: integer
            minim: 0
          maxAroRings:
            title: Maximum number of aromatic rings
            type: integer
            minim: 0
          minChiralCentres:
            title: Minimum number of chiral centres
            type: integer
            minimum: 0
          maxChiralCentres:
            title: Maximum number of chiral centres
            type: integer
            minimum: 0
          minUndefinedChiralCentres:
            title: Minimum number of undefined chiral centres
            type: integer
            minimum: 0
          maxUndefinedChiralCentres:
            title: Maximum number of undefined chiral centres
            type: integer
            minimum: 0
          minSp3:
            title: Minimum sp3
            type: integer
            minimum: 0
          maxSp3:
            title: Maximum sp3
            type: integer
            minimum: 0
            
  max-min-picker:
    name: Select diverse subset of molecules
    version: '1.0.0'
    category: virtual screening
    keywords:
    - rdkit
    - ligand preparation
    - diverse subset
    - filter
    image:
      name: informaticsmatters/virt-screening-rdkit
      tag: '1.0.2'
      project-directory: /data
    command: >-
      max_min_picker.py --input /data/{{ inputFile }} 
      --output /data/{{ outputFile }}
      --count {{ count }}
      --interval 10000
    variables:
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Molecules to pick from
            mime-types:
            - chemical/x-csv
            type: file
      outputs:
        type: object
        properties:
          outputFile:
            mime-types:
            - chemical/x-csv
            creates: '{{ outputFile }}'
            type: file
      options:
        type: object
        required:
        - count
        properties:
          outputFile:
            title: Output file name
            type: string
            default: diverse.smi
          count:
            title: Number of molecules to pick
            type: integer
            minimum: 1

  prep-enum-conf-lists:
    name: Prepare lists of molecules requiring enumeration or 3D conformer generation
    version: '1.0.0'
    category: virtual screening
    keywords:
    - rdkit
    - ligand preparation
    - enumeration
    - conformer generation
    image:
      name: informaticsmatters/virt-screening-rdkit
      tag: '1.0.2'
      project-directory: /data
    command: >-
      prepare_enum_conf_lists.py 
      --input /data/{{ inputFile }}
      --data-dir /data/{{ dataDir }}
      --outfile-enum /data/{{ outputFileEnum }}
      --outfile-conf /data/{{ outputFileConf }}
    variables:
      inputs:
        type: object
        required:
        - inputFile
        - dataDir
        properties:
          inputFile:
            title: Molecules to evaluate
            mime-types:
            - chemical/x-csv
            type: file
          dataDir:
            title: Directory with sharded data
            type: dir
      outputs:
        type: object
        properties:
          outputFileEnum:
            mime-types:
            - chemical/x-csv
            creates: '{{ outputFileEnum }}'
            type: file
          outputFileConf:
            mime-types:
            - chemical/x-csv
            creates: '{{ outputFileConf }}'
            type: file
      options:
        type: object
        required:
        - outputFileEnum
        - outputFileConf
        properties:
          outputFileEnum:
            title: Filename for molecules needing enumeration
            type: string
            default: need-enum.smi
          outputFileConf:
            title: Filename for molecules needing 3D conformers
            type: string
            default: need-conf.smi
            
  enumerate-candidates:
    name: Enumerate microstates, tautomers and undefined chiral centres
    version: '1.0.6'
    category: virtual screening
    keywords:
    - rdkit
    - ligand preparation
    - enumeration
    - dimorphite_dl
    - nextflow
    image:
      name: informaticsmatters/virt-screening-rdkit
      tag: '1.0.6'
      project-directory: /data
      type: nextflow
    command: >-
      nextflow run enumerate.nf
      --inputs /data/{{ inputFile }}
      --data-dir /data/{{ dataDir }}
    variables:
      inputs:
        type: object
        required:
        - inputFile
        - dataDir
        properties:
          inputFile:
            title: Molecules to enumerate
            mime-types:
            - chemical/x-csv
            type: file
          dataDir:
            title: Directory with sharded data
            type: dir
      outputs:
        type: object
        properties:
          enumerated:
            mime-types:
            - chemical/x-csv
            creates: '{{ dataDir }}/sha256/*/*/*.smi'
            # additional *.smi files might have already been generated
            type: directory
      # there are no options for this job

